function [sys,x0,str,ts] = EdgeGain(t,x,u,flag)
%{
    2019-12-28
    函数说明：
    1.通过Level-2函数实现边缘效应仿真；
    2.二分查表实现增益获取，对应表由一般出光口数据查询正常标定数据获取;
    File:H:\MatlabFiles\ADRC\Docs\figures\边缘查表距离反馈比.fig
    3.尝试使用Matlab Function方式实现，运算速度巨慢；
    4.@parameter:
      input(1):height
      output(1):gain
    5.正常运行条件：输入范围[1-1000]
%}
switch flag

  case 0
    [sys,x0,str,ts] = mdlInitializeSizes;
  case {1,4,9}
    sys = [];

  case 2
    sys = mdlUpdate(t,x,u);

  case 3
    sys = mdlOutputs(t,x,u);

  otherwise
    DAStudio.error('Simulink:blocks:unhandledFlag', num2str(flag));

end
%
function [sys,x0,str,ts] = mdlInitializeSizes

%
% call simsizes for a sizes structure, fill it in and convert it to a
% sizes array.
%
% Note that in this example, the values are hard coded.  This is not a
% recommended practice as the characteristics of the block are typically
% defined by the S-function parameters.
%
sizes = simsizes;

sizes.NumContStates  = 0;
% discstates = [height,gain]
sizes.NumDiscStates  = 2;
% outputs = [height,gain]
sizes.NumOutputs     = 2;
% input = [height]
sizes.NumInputs      = 1;
sizes.DirFeedthrough = 0;
sizes.NumSampleTimes = 1;   % at least one sample time is needed

sys = simsizes(sizes);

%
% initialize the initial conditions
%
x0  = [0 1];

%
% str is always an empty matrix
%
str = [];

%
% initialize the array of sample times
%
ts  = [5e-4 0];


%
%=============================================================================
% mdlUpdate
% Handle discrete state updates, sample time hits, and major time step
% requirements.
%=============================================================================
%
function sys = mdlUpdate(~,x,u)
if true
      Height = [
    1000,990,980,970,960,950,940,930,920,910,...
    900,890,880,870,860,850,840,830,820,810,...
    800,790,780,770,760,750,740,730,720,710,...
    700,690,680,670,660,650,640,630,620,610,...
    600,590,580,570,560,550,540,530,520,510,...
    500,499,498,497,496,495,494,493,492,491,...
    490,489,488,487,486,485,484,483,482,481,...
    480,479,478,477,476,475,474,473,472,471,...
    470,469,468,467,466,465,464,463,462,461,...
    460,459,458,457,456,455,454,453,452,451,...
    450,449,448,447,446,445,444,443,442,441,...
    440,439,438,437,436,435,434,433,432,431,...
    430,429,428,427,426,425,424,423,422,421,...
    420,419,418,417,416,415,414,413,412,411,...
    410,409,408,407,406,405,404,403,402,401,...
    400,399,398,397,396,395,394,393,392,391,...
    390,389,388,387,386,385,384,383,382,381,...
    380,379,378,377,376,375,374,373,372,371,...
    370,369,368,367,366,365,364,363,362,361,...
    360,359,358,357,356,355,354,353,352,351,...
    350,349,348,347,346,345,344,343,342,341,...
    340,339,338,337,336,335,334,333,332,331,...
    330,329,328,327,326,325,324,323,322,321,...
    320,319,318,317,316,315,314,313,312,311,...
    310,309,308,307,306,305,304,303,302,301,...
    300,299,298,297,296,295,294,293,292,291,...
    290,289,288,287,286,285,284,283,282,281,...
    280,279,278,277,276,275,274,273,272,271,...
    270,269,268,267,266,265,264,263,262,261,...
    260,259,258,257,256,255,254,253,252,251,...
    250,249,248,247,246,245,244,243,242,241,...
    240,239,238,237,236,235,234,233,232,231,...
    230,229,228,227,226,225,224,223,222,221,...
    220,219,218,217,216,215,214,213,212,211,...
    210,209,208,207,206,205,204,203,202,201,...
    200,199,198,197,196,195,194,193,192,191,...
    190,189,188,187,186,185,184,183,182,181,...
    180,179,178,177,176,175,174,173,172,171,...
    170,169,168,167,166,165,164,163,162,161,...
    160,159,158,157,156,155,154,153,152,151,...
    150,149,148,147,146,145,144,143,142,141,...
    140,139,138,137,136,135,134,133,132,131,...
    130,129,128,127,126,125,124,123,122,121,...
    120,119,118,117,116,115,114,113,112,111,...
    110,109,108,107,106,105,104,103,102,101,...
    100,99,98,97,96,95,94,93,92,91,...
    90,89,88,87,86,85,84,83,82,81,...
    80,79,78,77,76,75,74,73,72,71,...
    70,69,68,67,66,65,64,63,62,61,...
    60,59,58,57,56,55,54,53,52,51,...
    50,49,48,47,46,45,44,43,42,41,...
    40,39,38,37,36,35,34,33,32,31,...
    30,29,28,27,26,25,24,23,22,21,...
    20,19,18,17,16,15,14,13,12,11,...
    10,9,8,7,6,5,4,3,2,1
    ];

ratio = [
    0.935,0.934,0.942,0.933,0.941,0.941,0.940,0.949,0.939,0.948,...
    0.938,0.927,0.936,0.935,0.935,0.934,0.933,0.933,0.932,0.931,...
    0.930,0.929,0.929,0.939,0.938,0.938,0.937,0.936,0.923,0.934,...
    0.946,0.945,0.932,0.931,0.930,0.929,0.928,0.926,0.925,0.924,...
    0.938,0.922,0.921,0.919,0.918,0.917,0.931,0.914,0.929,0.927,...
    0.926,0.924,0.922,0.920,0.919,0.917,0.915,0.913,0.911,0.926,...
    0.925,0.923,0.921,0.919,0.917,0.915,0.913,0.911,0.945,0.925,...
    0.923,0.921,0.919,0.917,0.933,0.950,0.929,0.927,0.925,0.924,...
    0.922,0.920,0.918,0.916,0.914,0.912,0.910,0.908,0.906,0.904,...
    0.922,0.922,0.922,0.920,0.925,0.925,0.925,0.924,0.928,0.926,...
    0.926,0.924,0.922,0.925,0.925,0.923,0.923,0.921,0.927,0.925,...
    0.926,0.926,0.926,0.924,0.924,0.924,0.925,0.929,0.927,0.925,...
    0.925,0.925,0.924,0.922,0.922,0.922,0.924,0.922,0.921,0.923,...
    0.921,0.919,0.919,0.925,0.924,0.924,0.926,0.924,0.926,0.928,...
    0.923,0.925,0.927,0.925,0.925,0.925,0.927,0.926,0.926,0.924,...
    0.922,0.921,0.923,0.919,0.917,0.921,0.921,0.920,0.920,0.920,...
    0.924,0.922,0.922,0.921,0.923,0.923,0.923,0.925,0.927,0.925,...
    0.925,0.922,0.926,0.924,0.924,0.924,0.919,0.921,0.919,0.921,...
    0.920,0.922,0.922,0.922,0.920,0.929,0.924,0.921,0.928,0.928,...
    0.928,0.928,0.923,0.922,0.922,0.924,0.922,0.922,0.921,0.921,...
    0.919,0.916,0.913,0.916,0.923,0.920,0.920,0.920,0.924,0.924,...
    0.921,0.921,0.918,0.921,0.918,0.918,0.918,0.917,0.920,0.919,...
    0.922,0.922,0.919,0.921,0.921,0.921,0.920,0.920,0.920,0.920,...
    0.917,0.917,0.914,0.922,0.921,0.924,0.921,0.921,0.918,0.920,...
    0.923,0.922,0.922,0.922,0.919,0.919,0.918,0.918,0.918,0.918,...
    0.917,0.917,0.917,0.920,0.914,0.919,0.925,0.918,0.921,0.921,...
    0.918,0.915,0.920,0.920,0.920,0.916,0.919,0.913,0.913,0.912,...
    0.915,0.918,0.914,0.917,0.914,0.914,0.913,0.916,0.916,0.922,...
    0.918,0.918,0.921,0.914,0.914,0.911,0.913,0.916,0.916,0.916,...
    0.915,0.918,0.918,0.918,0.918,0.917,0.914,0.913,0.913,0.913,...
    0.916,0.912,0.908,0.911,0.918,0.914,0.914,0.914,0.910,0.913,...
    0.909,0.912,0.912,0.908,0.911,0.918,0.914,0.914,0.913,0.913,...
    0.913,0.909,0.912,0.912,0.915,0.918,0.914,0.914,0.914,0.909,...
    0.909,0.912,0.912,0.916,0.915,0.911,0.907,0.906,0.906,0.909,...
    0.913,0.909,0.908,0.912,0.920,0.919,0.915,0.914,0.914,0.910,...
    0.909,0.909,0.908,0.908,0.907,0.907,0.911,0.910,0.914,0.905,...
    0.905,0.904,0.908,0.908,0.907,0.907,0.906,0.906,0.905,0.905,...
    0.905,0.909,0.908,0.912,0.912,0.911,0.911,0.911,0.910,0.910,...
    0.909,0.909,0.908,0.908,0.907,0.912,0.906,0.906,0.905,0.904,...
    0.904,0.903,0.908,0.908,0.907,0.906,0.906,0.905,0.910,0.904,...
    0.904,0.903,0.908,0.907,0.912,0.906,0.911,0.905,0.904,0.904,...
    0.903,0.903,0.902,0.901,0.907,0.906,0.905,0.905,0.904,0.903,...
    0.909,0.908,0.908,0.901,0.900,0.899,0.899,0.898,0.897,0.896,...
    0.902,0.902,0.901,0.900,0.899,0.898,0.905,0.904,0.896,0.895,...
    0.902,0.901,0.900,0.899,0.898,0.897,0.897,0.904,0.895,0.902,...
    0.909,0.900,0.899,0.898,0.906,0.905,0.904,0.903,0.893,0.901,...
    0.900,0.899,0.907,0.897,0.905,0.904,0.903,0.902,0.891,0.900,...
    0.899,0.898,0.907,0.895,0.894,0.904,0.892,0.890,0.889,0.899,...
    0.897,0.896,0.907,0.893,0.892,0.890,0.889,0.887,0.899,0.897,...
    0.896,0.894,0.906,0.905,0.903,0.917,0.900,0.883,0.897,0.911,...
    0.893,0.891,0.906,0.904,0.885,0.900,0.898,0.878,0.894,0.891,...
    0.889,0.907,0.905,0.902,0.900,0.897,0.895,0.917,0.889,0.912,...
    0.882,0.879,0.903,0.931,0.897,0.893,0.889,0.885,0.880,0.875,...
    0.909,0.864,0.900,0.895,0.889,0.882,0.875,0.867,0.857,0.917,...
    0.909,0.818,0.889,0.778,0.857,0.714,0.800,0.750,0.500,0.500
    ];
Height = flip(Height);
gain = 1;
if u >= max(Height)
    gain = 1;
elseif u <= min(Height)
    gain = 0.5;
else
    head_index = int32(1);
    tail_index = int32(length(ratio));
    mid_index = int32(((tail_index - head_index + 1)/2));
    while (tail_index - head_index > 1)
        mid_index = int32(((tail_index - head_index + 1)/2));
        if u >= Height(mid_index)
            head_index = mid_index;
        end
        
        if u <= Height(mid_index)
            tail_index = mid_index;
        end
    end
    gain = ratio(mid_index);
end
% ----simple model----in use---- % 
else
    gain = 1;
    if u > 1000
        gain = 1;
    elseif u < 500
        gain = 0.5;
    else
        gain = 0.7;
    end
end
x(1) = u*gain;
x(2) = gain;
sys = x;

% end mdlUpdate

%
%=============================================================================
% mdlOutputs
% Return the block outputs.
%=============================================================================
%
function sys = mdlOutputs(~,x,~)
sys = x;
